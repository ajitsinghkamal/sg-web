{"version":3,"sources":["work.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","_interopRequireDefault","obj","__esModule","default","addHoverToCards","slideMap","forEach","slideDiv","_jquery2","on","slideShow","endSlideShow","_vanillaLazyload2","clientGrid","proGrid","btnClient","btnProactive","gridHolder","background","myLazyLoad1","myLazyLoad2","timer","calcRequiredExtra","available","reduce","acc","size","currentRequired","Math","max","addToGrid","grid","cell","append","_this","this","fadeOut","fadeIn","setInterval","next","end","appendTo","clearInterval","constructGrid","gridData","gridType","gridLength","Object","keys","data","index","card","addClass","imgSlot","attr","thumb_image","thumb_slide","sl","hide","push","thumb_title","thumb_tag","error","console","message","dummyPanes","newGridElement","removeClass","get","response","done","key","container","document","getElementById","fail","jquery","vanilla-lazyload"],"mappings":"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","file":"../work.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nvar _jquery = require('jquery');\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _vanillaLazyload = require('vanilla-lazyload');\n\nvar _vanillaLazyload2 = _interopRequireDefault(_vanillaLazyload);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Constants declaration\nvar API = 'https://sudeepgandhiweb.firebaseio.com/.json'; // database path\n\n// const fire = firebase.initializeApp({\n// \tapiKey: 'AIzaSyDiMtPwt58-NEnR56kTzJ9HddG5IrGuhrE',\n// \tauthDomain: 'sudeepgandhiweb.firebaseapp.com',\n// \tdatabaseURL: 'https://sudeepgandhiweb.firebaseio.com',\n// \tprojectId: 'sudeepgandhiweb',\n// });\n\n// const db = fire.database();\n\n\n// DOM references\n\n\n// import * as firebase from 'firebase/app';\n// import 'firebase/database';\n\nvar clientGrid = (0, _jquery2.default)('.grid__client');\nvar proGrid = (0, _jquery2.default)('.grid__proactive');\nvar btnClient = (0, _jquery2.default)('.gallery__btn-client');\nvar btnProactive = (0, _jquery2.default)('.gallery__btn-proactive');\nvar gridHolder = (0, _jquery2.default)('.grid-holder');\nvar background = (0, _jquery2.default)('.work-page');\n\n// initialise lazy loading\nvar myLazyLoad1 = void 0;\nvar myLazyLoad2 = void 0;\n\nvar timer = null;\n\nvar slideMap = []; // holds id reference for divs with slideshow\n\n\nvar calcRequiredExtra = function calcRequiredExtraFunc(available) {\n\treturn [2, 3, 4, 5].reduce(function (acc, size) {\n\t\tvar currentRequired = size - available % size;\n\t\treturn Math.max(currentRequired, acc);\n\t}, 0);\n};\n\nvar addToGrid = function addToGridFunc(grid, cell) {\n\tif (grid === 'client') {\n\t\tclientGrid.append(cell);\n\t}\n\tif (grid === 'pro') {\n\t\tproGrid.append(cell);\n\t}\n};\n\n// slideshow \nvar slideShow = function slideShowFunc() {\n\tvar _this = this;\n\n\t(0, _jquery2.default)(':first-child', this).fadeOut();\n\t(0, _jquery2.default)(':nth-child(2)', this).fadeIn(1000);\n\ttimer = setInterval(function () {\n\t\t(0, _jquery2.default)(':nth-child(2)', _this).fadeOut(1000).next().fadeIn(1000).end().appendTo(_this);\n\t}, 1200);\n};\n\nvar endSlideShow = function endSlideShowFunc() {\n\t(0, _jquery2.default)(':first-child', this).fadeIn(1000);\n\tclearInterval(timer);\n};\n\nfunction addHoverToCards() {\n\tslideMap.forEach(function (slideDiv) {\n\t\t(0, _jquery2.default)('#' + slideDiv).on('mouseenter', slideShow);\n\t\t(0, _jquery2.default)('#' + slideDiv).on('mouseleave', endSlideShow);\n\t});\n}\n/**\n * takes in response from firebase database\n * and construct the grid showcase of the work done\n * \n * @param {object} data \n */\nvar constructGrid = function constructGridFunc(gridData, gridType) {\n\tvar gridLength = 0;\n\tObject.keys(gridData).forEach(function (data, index) {\n\t\ttry {\n\t\t\tvar card = (0, _jquery2.default)('<a href=overview?work=' + data + '></a>').addClass('grid-cell card');\n\n\t\t\tvar imgSlot = (0, _jquery2.default)(\"<div class='card__image'></div>\").attr('id', gridType + index);\n\n\t\t\timgSlot.append((0, _jquery2.default)('<img data-original=' + gridData[data].thumb_image + '></div>').addClass('lazyload'));\n\t\t\tif (gridData[data].thumb_slide) {\n\t\t\t\tgridData[data].thumb_slide.forEach(function (sl) {\n\t\t\t\t\timgSlot.append((0, _jquery2.default)('<img src=' + sl + '>').hide());\n\t\t\t\t});\n\t\t\t\tslideMap.push(gridType + index);\n\t\t\t}\n\t\t\tcard.append(imgSlot);\n\t\t\tcard.append((0, _jquery2.default)('<div><h3>' + gridData[data].thumb_title + '</h3><p>' + gridData[data].thumb_tag + '</p></div>').addClass('card__desc'));\n\n\t\t\taddToGrid(gridType, card, index);\n\t\t\tgridLength += 1;\n\t\t} catch (error) {\n\t\t\tconsole.error(error.message);\n\t\t}\n\t});\n\tvar dummyPanes = calcRequiredExtra(gridLength);\n\n\tfor (var i = 0; i < dummyPanes; i += 1) {\n\t\tvar newGridElement = (0, _jquery2.default)('<div></div>').addClass('grid-cell grid-cell--empty');\n\t\taddToGrid(gridType, newGridElement);\n\t}\n};\n\n// db.ref().on('value', (snapshot) => {\n// \tconst clientWorkList = snapshot.child('client').val();\n// \tconstructGrid(clientWorkList, 'client');\n// \tconst proWorkList = snapshot.child('pro').val();\n// \tconstructGrid(proWorkList, 'pro');\n\n// \tmyLazyLoad = new LazyLoad();\n// \taddHoverToCards();\n// });\n// db.ref('/pro/').once('value', (snapshot) => {\n// });\n\n/**\n * calls firebase data api , \n * fetches response and initiate grid construction\n * \n */\nvar beginShowcase = function beginShowcaseFunc() {\n\t_jquery2.default.get(API, function (response) {\n\t\t// console.log(response);\n\t}).done(function (response) {\n\t\tObject.keys(response).forEach(function (key) {\n\t\t\tconstructGrid(response[key], key);\n\t\t});\n\n\t\tmyLazyLoad1 = new _vanillaLazyload2.default({\n\t\t\tcontainer: document.getElementById('o-client')\n\t\t});\n\n\t\tmyLazyLoad2 = new _vanillaLazyload2.default({\n\t\t\tcontainer: document.getElementById('o-proactive')\n\t\t});\n\n\t\taddHoverToCards();\n\t\t(0, _jquery2.default)('.grid--fetch').addClass('grid--complete');\n\t}).fail(function (error) {\n\t\tconsole.error(error.message);\n\t});\n};\n\n// ------------- event listeners ---------------------\n\n/**\n * \n */\nbtnClient.on('click', function () {\n\tbackground.removeClass('work-page--bg');\n\tbtnClient.addClass('gallery--active');\n\tbtnProactive.removeClass('gallery--active');\n\tgridHolder.removeClass('grid--slide');\n});\n\nbtnProactive.on('click', function () {\n\tbackground.addClass('work-page--bg');\n\tbtnClient.removeClass('gallery--active');\n\tbtnProactive.addClass('gallery--active');\n\tgridHolder.addClass('grid--slide');\n});\n\nbeginShowcase();\n\n},{\"jquery\":\"jquery\",\"vanilla-lazyload\":\"vanilla-lazyload\"}]},{},[1])\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n"]}