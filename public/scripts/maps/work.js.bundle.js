{"version":3,"sources":["work.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","_interopRequireDefault","obj","__esModule","default","addHoverToCards","slideMap","forEach","slideDiv","_jquery2","on","slideShow","endSlideShow","_vanillaLazyload2","clientGrid","proGrid","btnClient","btnProactive","gridHolder","myLazyLoad","timer","calcRequiredExtra","available","reduce","acc","size","currentRequired","Math","max","addToGrid","grid","cell","append","_this","this","fadeOut","fadeIn","setInterval","next","end","appendTo","clearInterval","constructGrid","gridData","gridType","dummyPanes","data","index","card","link","addClass","imgSlot","attr","image","slide","sl","hide","push","title","tag","error","console","message","newGridElement","removeClass","get","response","log","done","Object","keys","key","fail","jquery","vanilla-lazyload"],"mappings":"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","file":"../work.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nvar _jquery = require('jquery');\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _vanillaLazyload = require('vanilla-lazyload');\n\nvar _vanillaLazyload2 = _interopRequireDefault(_vanillaLazyload);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Constants declaration\nvar API = 'https://sudeepgandhiweb.firebaseio.com/.json'; // database path\n\n// DOM references\nvar clientGrid = (0, _jquery2.default)('.grid--client');\nvar proGrid = (0, _jquery2.default)('.grid--proactive');\nvar btnClient = (0, _jquery2.default)('.btn--client');\nvar btnProactive = (0, _jquery2.default)('.btn--proactive');\nvar gridHolder = (0, _jquery2.default)('.grid-holder');\n\n// initialise lazy loading\nvar myLazyLoad = void 0;\n\nvar timer = null;\n\nvar slideMap = []; // holds id reference for divs with slideshow\n\n\nvar calcRequiredExtra = function calcRequiredExtraFunc(available) {\n\treturn [2, 3, 4, 5].reduce(function (acc, size) {\n\t\tvar currentRequired = size - available % size;\n\t\treturn Math.max(currentRequired, acc);\n\t}, 0);\n};\n\nvar addToGrid = function addToGridFunc(grid, cell) {\n\tif (grid === 'clientWork') {\n\t\tclientGrid.append(cell);\n\t} else {\n\t\tproGrid.append(cell);\n\t}\n};\n\n// slideshow \nvar slideShow = function slideShowFunc() {\n\tvar _this = this;\n\n\t(0, _jquery2.default)(':first-child', this).fadeOut();\n\t(0, _jquery2.default)(':nth-child(2)', this).fadeIn(1000);\n\ttimer = setInterval(function () {\n\t\t(0, _jquery2.default)(':nth-child(2)', _this).fadeOut(1000).next().fadeIn(1000).end().appendTo(_this);\n\t}, 1200);\n};\n\nvar endSlideShow = function endSlideShowFunc() {\n\t(0, _jquery2.default)(':first-child', this).fadeIn(1000);\n\tclearInterval(timer);\n};\n\nfunction addHoverToCards() {\n\tslideMap.forEach(function (slideDiv) {\n\t\t(0, _jquery2.default)('#' + slideDiv).on('mouseenter', slideShow);\n\t\t(0, _jquery2.default)('#' + slideDiv).on('mouseleave', endSlideShow);\n\t});\n}\n/**\n * takes in response from firebase database\n * and construct the grid showcase of the work done\n * \n * @param {object} data \n */\nvar constructGrid = function constructGridFunc(gridData, gridType) {\n\tdebugger;\n\tvar dummyPanes = calcRequiredExtra(gridData.length);\n\tgridData.forEach(function (data, index) {\n\t\ttry {\n\t\t\tvar card = (0, _jquery2.default)('<a href=' + data.link + '></a>').addClass('grid--cell card');\n\n\t\t\tvar imgSlot = (0, _jquery2.default)(\"<div class='project-image'></div>\").attr('id', gridType + index);\n\n\t\t\timgSlot.append((0, _jquery2.default)('<img data-original=' + data.image + '></div>').addClass('lazyload'));\n\t\t\tif (data.slide) {\n\t\t\t\tdata.slide.forEach(function (sl) {\n\t\t\t\t\timgSlot.append((0, _jquery2.default)('<img src=' + sl + '>').hide());\n\t\t\t\t});\n\t\t\t\tslideMap.push(gridType + index);\n\t\t\t}\n\t\t\tcard.append(imgSlot);\n\t\t\tcard.append((0, _jquery2.default)('<div><h3>' + data.title + '</h3><p>' + data.tag + '</p></div>').addClass('project-desc'));\n\n\t\t\taddToGrid(gridType, card, index);\n\t\t} catch (error) {\n\t\t\tconsole.error(error.message);\n\t\t}\n\t});\n\n\tfor (var i = 0; i < dummyPanes; i += 1) {\n\t\tvar newGridElement = (0, _jquery2.default)('<div></div>').addClass('grid--cell empty-cell');\n\t\taddToGrid(gridType, newGridElement);\n\t}\n};\n\n/**\n * calls firebase data api , \n * fetches response and initiate grid construction\n * \n */\nvar beginShowcase = function beginShowcaseFunc() {\n\t_jquery2.default.get(API, function (response) {\n\t\tconsole.log(response);\n\t}).done(function (response) {\n\t\tObject.keys(response).forEach(function (key) {\n\t\t\tconstructGrid(response[key], key);\n\t\t});\n\n\t\tmyLazyLoad = new _vanillaLazyload2.default();\n\t\taddHoverToCards();\n\t}).fail(function (error) {\n\t\tconsole.error(error.message);\n\t});\n};\n\n// ------------- event listeners ---------------------\n\n/**\n * \n */\nbtnClient.on('click', function () {\n\tbtnClient.addClass('active');\n\tbtnProactive.removeClass('active');\n\tgridHolder.removeClass('slide');\n});\n\nbtnProactive.on('click', function () {\n\tbtnClient.removeClass('active');\n\tbtnProactive.addClass('active');\n\tgridHolder.addClass('slide');\n});\n\nbeginShowcase();\n\n},{\"jquery\":\"jquery\",\"vanilla-lazyload\":\"vanilla-lazyload\"}]},{},[1])\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyaWZ5L25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvc2NyaXB0cy93b3JrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7QUNBQTs7OztBQUNBOzs7Ozs7QUFFQTtBQUNBLElBQU0sTUFBTSw4Q0FBWixDLENBQTREOztBQUU1RDtBQUNBLElBQU0sYUFBYSxzQkFBRSxlQUFGLENBQW5CO0FBQ0EsSUFBTSxVQUFVLHNCQUFFLGtCQUFGLENBQWhCO0FBQ0EsSUFBTSxZQUFZLHNCQUFFLGNBQUYsQ0FBbEI7QUFDQSxJQUFNLGVBQWUsc0JBQUUsaUJBQUYsQ0FBckI7QUFDQSxJQUFNLGFBQWEsc0JBQUUsY0FBRixDQUFuQjs7QUFFQTtBQUNBLElBQUksbUJBQUo7O0FBRUEsSUFBSSxRQUFRLElBQVo7O0FBRUEsSUFBTSxXQUFXLEVBQWpCLEMsQ0FBcUI7OztBQUdyQixJQUFNLG9CQUFvQixTQUFTLHFCQUFULENBQStCLFNBQS9CLEVBQTBDO0FBQ25FLFFBQU8sQ0FBQyxDQUFELEVBQUksQ0FBSixFQUFPLENBQVAsRUFBVSxDQUFWLEVBQWEsTUFBYixDQUFvQixVQUFDLEdBQUQsRUFBTSxJQUFOLEVBQWU7QUFDekMsTUFBTSxrQkFBa0IsT0FBUSxZQUFZLElBQTVDO0FBQ0EsU0FBTyxLQUFLLEdBQUwsQ0FBUyxlQUFULEVBQTBCLEdBQTFCLENBQVA7QUFDQSxFQUhNLEVBR0osQ0FISSxDQUFQO0FBSUEsQ0FMRDs7QUFPQSxJQUFNLFlBQVksU0FBUyxhQUFULENBQXVCLElBQXZCLEVBQTZCLElBQTdCLEVBQW1DO0FBQ3BELEtBQUksU0FBUyxZQUFiLEVBQTJCO0FBQzFCLGFBQVcsTUFBWCxDQUFrQixJQUFsQjtBQUNBLEVBRkQsTUFFTztBQUNOLFVBQVEsTUFBUixDQUFlLElBQWY7QUFDQTtBQUNELENBTkQ7O0FBU0E7QUFDQSxJQUFNLFlBQVksU0FBUyxhQUFULEdBQXlCO0FBQUE7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QixVQUFRLEtBQVIsQ0FBYyxNQUFNLE9BQXBCO0FBQ0EsRUFiRjtBQWNBLENBZkQ7O0FBaUJBOztBQUVBOzs7QUFHQSxVQUFVLEVBQVYsQ0FBYSxPQUFiLEVBQXNCLFlBQU07QUFDM0IsV0FBVSxRQUFWLENBQW1CLFFBQW5CO0FBQ0EsY0FBYSxXQUFiLENBQXlCLFFBQXpCO0FBQ0EsWUFBVyxXQUFYLENBQXVCLE9BQXZCO0FBQ0EsQ0FKRDs7QUFNQSxhQUFhLEVBQWIsQ0FBZ0IsT0FBaEIsRUFBeUIsWUFBTTtBQUM5QixXQUFVLFdBQVYsQ0FBc0IsUUFBdEI7QUFDQSxjQUFhLFFBQWIsQ0FBc0IsUUFBdEI7QUFDQSxZQUFXLFFBQVgsQ0FBb0IsT0FBcEI7QUFDQSxDQUpEOztBQU1BIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsImltcG9ydCAkIGZyb20gJ2pxdWVyeSc7XG5pbXBvcnQgTGF6eUxvYWQgZnJvbSAndmFuaWxsYS1sYXp5bG9hZCc7XG5cbi8vIENvbnN0YW50cyBkZWNsYXJhdGlvblxuY29uc3QgQVBJID0gJ2h0dHBzOi8vc3VkZWVwZ2FuZGhpd2ViLmZpcmViYXNlaW8uY29tLy5qc29uJzsgLy8gZGF0YWJhc2UgcGF0aFxuXG4vLyBET00gcmVmZXJlbmNlc1xuY29uc3QgY2xpZW50R3JpZCA9ICQoJy5ncmlkLS1jbGllbnQnKTtcbmNvbnN0IHByb0dyaWQgPSAkKCcuZ3JpZC0tcHJvYWN0aXZlJyk7XG5jb25zdCBidG5DbGllbnQgPSAkKCcuYnRuLS1jbGllbnQnKTtcbmNvbnN0IGJ0blByb2FjdGl2ZSA9ICQoJy5idG4tLXByb2FjdGl2ZScpO1xuY29uc3QgZ3JpZEhvbGRlciA9ICQoJy5ncmlkLWhvbGRlcicpO1xuXG4vLyBpbml0aWFsaXNlIGxhenkgbG9hZGluZ1xubGV0IG15TGF6eUxvYWQgO1xuXG5sZXQgdGltZXIgPSBudWxsO1xuXG5jb25zdCBzbGlkZU1hcCA9IFtdOyAvLyBob2xkcyBpZCByZWZlcmVuY2UgZm9yIGRpdnMgd2l0aCBzbGlkZXNob3dcblxuXG5jb25zdCBjYWxjUmVxdWlyZWRFeHRyYSA9IGZ1bmN0aW9uIGNhbGNSZXF1aXJlZEV4dHJhRnVuYyhhdmFpbGFibGUpIHtcblx0cmV0dXJuIFsyLCAzLCA0LCA1XS5yZWR1Y2UoKGFjYywgc2l6ZSkgPT4ge1xuXHRcdGNvbnN0IGN1cnJlbnRSZXF1aXJlZCA9IHNpemUgLSAoYXZhaWxhYmxlICUgc2l6ZSk7XG5cdFx0cmV0dXJuIE1hdGgubWF4KGN1cnJlbnRSZXF1aXJlZCwgYWNjKTtcblx0fSwgMCk7XG59O1xuXG5jb25zdCBhZGRUb0dyaWQgPSBmdW5jdGlvbiBhZGRUb0dyaWRGdW5jKGdyaWQsIGNlbGwpIHtcblx0aWYgKGdyaWQgPT09ICdjbGllbnRXb3JrJykge1xuXHRcdGNsaWVudEdyaWQuYXBwZW5kKGNlbGwpO1xuXHR9IGVsc2Uge1xuXHRcdHByb0dyaWQuYXBwZW5kKGNlbGwpO1xuXHR9XG59O1xuXG5cbi8vIHNsaWRlc2hvdyBcbmNvbnN0IHNsaWRlU2hvdyA9IGZ1bmN0aW9uIHNsaWRlU2hvd0Z1bmMoKSB7XG5cdCQoJzpmaXJzdC1jaGlsZCcsIHRoaXMpLmZhZGVPdXQoKTtcblx0JCgnOm50aC1jaGlsZCgyKScsIHRoaXMpLmZhZGVJbigxMDAwKTtcblx0dGltZXIgPSBzZXRJbnRlcnZhbCgoKSA9PiB7XG5cdFx0JCgnOm50aC1jaGlsZCgyKScsIHRoaXMpXG5cdFx0XHQuZmFkZU91dCgxMDAwKVxuXHRcdFx0Lm5leHQoKVxuXHRcdFx0LmZhZGVJbigxMDAwKVxuXHRcdFx0LmVuZCgpXG5cdFx0XHQuYXBwZW5kVG8odGhpcyk7XG5cdH0sIDEyMDApO1xufTtcblxuY29uc3QgZW5kU2xpZGVTaG93ID0gZnVuY3Rpb24gZW5kU2xpZGVTaG93RnVuYygpIHtcblx0JCgnOmZpcnN0LWNoaWxkJywgdGhpcykuZmFkZUluKDEwMDApO1xuXHRjbGVhckludGVydmFsKHRpbWVyKTtcbn07XG5cblxuZnVuY3Rpb24gYWRkSG92ZXJUb0NhcmRzKCkge1xuXHRzbGlkZU1hcC5mb3JFYWNoKChzbGlkZURpdikgPT4ge1xuXHRcdCQoYCMke3NsaWRlRGl2fWApLm9uKCdtb3VzZWVudGVyJywgc2xpZGVTaG93KTtcblx0XHQkKGAjJHtzbGlkZURpdn1gKS5vbignbW91c2VsZWF2ZScsIGVuZFNsaWRlU2hvdyk7XG5cdH0pO1xufVxuLyoqXG4gKiB0YWtlcyBpbiByZXNwb25zZSBmcm9tIGZpcmViYXNlIGRhdGFiYXNlXG4gKiBhbmQgY29uc3RydWN0IHRoZSBncmlkIHNob3djYXNlIG9mIHRoZSB3b3JrIGRvbmVcbiAqIFxuICogQHBhcmFtIHtvYmplY3R9IGRhdGEgXG4gKi9cbmNvbnN0IGNvbnN0cnVjdEdyaWQgPSBmdW5jdGlvbiBjb25zdHJ1Y3RHcmlkRnVuYyhncmlkRGF0YSwgZ3JpZFR5cGUpIHtcblx0ZGVidWdnZXI7XG5cdGNvbnN0IGR1bW15UGFuZXMgPSBjYWxjUmVxdWlyZWRFeHRyYShncmlkRGF0YS5sZW5ndGgpO1xuXHRncmlkRGF0YS5mb3JFYWNoKChkYXRhLCBpbmRleCkgPT4ge1xuXHRcdHRyeSB7XG5cdFx0XHRjb25zdCBjYXJkID0gJChgPGEgaHJlZj0ke2RhdGEubGlua30+PC9hPmApLmFkZENsYXNzKCdncmlkLS1jZWxsIGNhcmQnKTtcblxuXHRcdFx0Y29uc3QgaW1nU2xvdCA9ICgkKFwiPGRpdiBjbGFzcz0ncHJvamVjdC1pbWFnZSc+PC9kaXY+XCIpLmF0dHIoJ2lkJywgZ3JpZFR5cGUgKyBpbmRleCkpO1xuXG5cdFx0XHRpbWdTbG90LmFwcGVuZCgkKGA8aW1nIGRhdGEtb3JpZ2luYWw9JHtkYXRhLmltYWdlfT48L2Rpdj5gKS5hZGRDbGFzcygnbGF6eWxvYWQnKSk7XG5cdFx0XHRpZiAoZGF0YS5zbGlkZSkge1xuXHRcdFx0XHRkYXRhLnNsaWRlLmZvckVhY2goKHNsKSA9PiB7XG5cdFx0XHRcdFx0aW1nU2xvdC5hcHBlbmQoJChgPGltZyBzcmM9JHtzbH0+YCkuaGlkZSgpKTtcblx0XHRcdFx0fSk7XG5cdFx0XHRcdHNsaWRlTWFwLnB1c2goZ3JpZFR5cGUgKyBpbmRleCk7XG5cdFx0XHR9XG5cdFx0XHRjYXJkLmFwcGVuZChpbWdTbG90KTtcblx0XHRcdGNhcmQuYXBwZW5kKCQoYDxkaXY+PGgzPiR7ZGF0YS50aXRsZX08L2gzPjxwPiR7ZGF0YS50YWd9PC9wPjwvZGl2PmApLmFkZENsYXNzKCdwcm9qZWN0LWRlc2MnKSk7XG5cblx0XHRcdGFkZFRvR3JpZChncmlkVHlwZSwgY2FyZCwgaW5kZXgpO1xuXHRcdH0gY2F0Y2ggKGVycm9yKSB7XG5cdFx0XHRjb25zb2xlLmVycm9yKGVycm9yLm1lc3NhZ2UpO1xuXHRcdH1cblx0fSk7XG5cblx0Zm9yIChsZXQgaSA9IDA7IGkgPCBkdW1teVBhbmVzOyBpICs9IDEpIHtcblx0XHRjb25zdCBuZXdHcmlkRWxlbWVudCA9ICQoJzxkaXY+PC9kaXY+JykuYWRkQ2xhc3MoJ2dyaWQtLWNlbGwgZW1wdHktY2VsbCcpO1xuXHRcdGFkZFRvR3JpZChncmlkVHlwZSwgbmV3R3JpZEVsZW1lbnQpO1xuXHR9XG59O1xuXG4vKipcbiAqIGNhbGxzIGZpcmViYXNlIGRhdGEgYXBpICwgXG4gKiBmZXRjaGVzIHJlc3BvbnNlIGFuZCBpbml0aWF0ZSBncmlkIGNvbnN0cnVjdGlvblxuICogXG4gKi9cbmNvbnN0IGJlZ2luU2hvd2Nhc2UgPSBmdW5jdGlvbiBiZWdpblNob3djYXNlRnVuYygpIHtcblx0JC5nZXQoQVBJLCAocmVzcG9uc2UpID0+IHtcblx0XHRjb25zb2xlLmxvZyhyZXNwb25zZSk7XG5cdH0pXG5cdFx0LmRvbmUoKHJlc3BvbnNlKSA9PiB7XG5cdFx0XHRPYmplY3Qua2V5cyhyZXNwb25zZSkuZm9yRWFjaCgoa2V5KSA9PiB7XG5cdFx0XHRcdGNvbnN0cnVjdEdyaWQocmVzcG9uc2Vba2V5XSwga2V5KTtcblx0XHRcdH0pO1xuXG5cdFx0XHRteUxhenlMb2FkID0gbmV3IExhenlMb2FkKCk7XG5cdFx0XHRhZGRIb3ZlclRvQ2FyZHMoKTtcblx0XHR9KVxuXHRcdC5mYWlsKChlcnJvcikgPT4ge1xuXHRcdFx0Y29uc29sZS5lcnJvcihlcnJvci5tZXNzYWdlKTtcblx0XHR9KTtcbn07XG5cbi8vIC0tLS0tLS0tLS0tLS0gZXZlbnQgbGlzdGVuZXJzIC0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vKipcbiAqIFxuICovXG5idG5DbGllbnQub24oJ2NsaWNrJywgKCkgPT4ge1xuXHRidG5DbGllbnQuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xuXHRidG5Qcm9hY3RpdmUucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xuXHRncmlkSG9sZGVyLnJlbW92ZUNsYXNzKCdzbGlkZScpO1xufSk7XG5cbmJ0blByb2FjdGl2ZS5vbignY2xpY2snLCAoKSA9PiB7XG5cdGJ0bkNsaWVudC5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XG5cdGJ0blByb2FjdGl2ZS5hZGRDbGFzcygnYWN0aXZlJyk7XG5cdGdyaWRIb2xkZXIuYWRkQ2xhc3MoJ3NsaWRlJyk7XG59KTtcblxuYmVnaW5TaG93Y2FzZSgpO1xuIl19\n"]}